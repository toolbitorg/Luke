BINDIR = ../bin
OBJDIR = ../build
INCDIR = ../include
LIBDIR = ../../ToolbitSDK/lib/macos
LIBINCDIR = ../../ToolbitSDK/include
LIBSRCDIR = ../../ToolbitSDK/src

CXX = $(shell wx-config --cxx)
WX-CONFIG_CXXFLAGS	= $(shell wx-config --cxxflags)
WX-CONFIG_LIBS		= $(shell wx-config --libs)

# CC  = gcc
# CXX = g++
CXXFLAGS  = -g -MMD -MP
LDFLAGS =
INCLUDE = -I$(INCDIR) -I$(LIBINCDIR) $(WX-CONFIG_CXXFLAGS)

LIBOBJS = $(LIBDIR)/libtbi.a
LIBS = $(LIBOBJS) $(WX-CONFIG_LIBS)

TARGET = $(BINDIR)/ChopperCtrl
CPP_SOURCES = $(wildcard *.cpp)

OBJECTS	= $(addprefix $(OBJDIR)/, $(CPP_SOURCES:.cpp=.o)) $(addprefix $(OBJDIR)/, $(C_SOURCES:.c=.o))
DEPENDS = $(OBJECTS:.o=.d)



# implementation

all: $(TARGET)

$(LIBOBJS): FORCE
	cd $(LIBSRCDIR); make -f makefile.macos

FORCE:

$(TARGET): $(OBJECTS) $(LIBOBJS)
	@[ -d $(BINDIR) ] || mkdir -p $(BINDIR)
	$(CXX) -o $@ $(OBJECTS) $(LDFLAGS) $(LIBS)
	SetFile -t APPL $(TARGET)

$(OBJDIR)/%.o : %.cpp
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CXX) $(CXXFLAGS) $(INCLUDE) -o $@ -c $<


clean:
	$(RM) $(OBJECTS) $(TARGET) $(DEPENDS)
	cd $(LIBSRCDIR); make -f makefile.macos clean


-include $(DEPENDS)

.SUFFIXES:      .o .cpp .c

.PHONY: all clean
